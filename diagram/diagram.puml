@startuml

class User {
    .. Attributes ..
    -id : int
    -name : String
    -email : String
    -address : String
    -heartRate : int
    -type : User.Type
    --
    .. Constructors ..
    +User()
    +User(int id, String name, String email,
        String address, int heartRate, Type type)
    +User(User user)
    .. Methods - Getters ..
    +getId() : int
    +getName() : String
    +getEmail() : String
    +getAddress() : String
    +getHeartRate() : int
    +getType() : User.Type
    .. Methods - Setters ..
    +setId(int id) : void
    +setName(String name) : void
    +setEmail(String email) : void
    +setAddress(String address) : void
    +setHeartRate(int heartRate) : void
    +setType(Type type) : void
    .. Methods - Other ..
    +toString() : String
    +equals(Object o) : boolean
    +clone() : User
    +view() : void
    +{static} create(Scanner sc, ArrayList<User> users) : User
    -{static} search(Scanner sc, ArrayList<User> users) : User
    +{static} view(Scanner sc, ArrayList<User> users) : void
    +{static} delete(Scanner sc, ArrayList<User> users) : void
}

enum User.Type {
    OCCASIONAL(40),
    AMATEUR(60),
    PROFESSIONAL(90)
    --
    .. Attribute ..
    -nutritionMultiplier : int
    .. Getter ..
    +getNutritionMultiplier() : int
}

class Register {
    // TODO: attributes and methods
}

class Activity {
    .. Attributes ..
    -duration : int
    -type : Activity.Type
    --
    .. Constructors ..
    +Activity()
    +Activity(int duration, Type type)
    +Activity(Activity activity)
    .. Methods - Getters ..
    +getDuration() : int
    +getType() : Activity.Type
    .. Methods - Setters ..
    +setDuration(int duration) : void
    +setType(Type type) : void
}

enum Activity.Type {
    // distance and altimetry
    STREET_RUNNING        (1000,   50,    0,    0, false, 70),
    TRAIL_RUNNING         (1500,  300,    0,    0,  true, 80),
    MOUNTAIN_BIKING       (3000,  500,    0,    0,  true, 85),
    STREET_BIKING         (5000,  250,    0,    0, false, 75),

    // distance
    ROWING                (5000,    0,    0,    0, false, 70),
    TRACK_RUNNING         (2000,    0,    0,    0, false, 70),
    SKATING               (1500,    0,    0,    0, false, 60),

    // repetitions
    ABDOMINALS            (   0,    0,   50,    0, false, 50),
    STRETCHING            (   0,    0,   25,    0, false, 40),
    PUSHUPS               (   0,    0,   30,    0, false, 60),
    DIAMOND_PUSHUPS       (   0,    0,   20,    0, false, 65),
    PULLUPS               (   0,    0,   10,    0, false, 70),
    DIPS                  (   0,    0,   15,    0, false, 60),
    MUSCLEUPS             (   0,    0,    5,    0,  true, 80),

    // weighted repetitions
    WEIGHT_LIFTING_SMALL  (   0,    0,   10,   20, false, 60),
    WEIGHT_LIFTING_MEDIUM (   0,    0,   10,   40, false, 70),
    WEIGHT_LIFTING_LARGE  (   0,    0,   10,   60,  true, 80),
    LEG_EXTENSION_SMALL   (   0,    0,   10,   40, false, 55),
    LEG_EXTENSION_MEDIUM  (   0,    0,   10,   60, false, 65),
    LEG_EXTENSION_LARGE   (   0,    0,   10,  100,  true, 75)
    --
    .. Attributes ..
    -distance : int
    -altimetry : int
    -repetitions : int
    -weight : int
    -hard : boolean
    -intensity : int
    .. Getters ..
    +getDistance() : int
    +getAltimetry() : int
    +getRepetitions() : int
    +getWeight() : int
    +getHard() : boolean
    +getIntensity() : int
    .. Methods - Other ..
    +isDistanceAltimetry() : boolean
    +isDistance() : boolean
    +isRepetitions() : boolean
    +isWeightedRepetitions() : boolean
}

class Plan {
    // TODO: attributes and methods
}

class Event {
    // TODO: attributes and methods
}

class Stats {
    // TODO: methods for statistics calculation
}

class Main {
    .. Attributes ..
    -updatedState : boolean
    -users : ArrayList<User>
    --
    .. Methods ..
    +{static} main(String args[]) : void
    -{static} mainMenu(Scanner scanner, String stateFilepath, Main m) : void
    -{static} saveState(String stateFilepath, Main m) : void
    -{static} loadState(String stateFilepath, Main m, Scanner sc) : void
}

Register *-- User
User *-- Plan
Event *-- Plan
Activity *-- Event
Main *-- User
Main *-- Activity
Main *-- Plan
Main *-- Stats

@enduml
